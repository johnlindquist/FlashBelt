package com.johnlindquist.gotcake.view {
	import utils.display.removeAllChildren;

	import com.johnlindquist.gotcake.services.vo.BakeryDelivery;

	import flight.binding.Bind;

	import com.johnlindquist.gotcake.model.TrumpFridge;

	import org.robotlegs.mvcs.Mediator;

	import mx.events.PropertyChangeEvent;

	/**
	 * @author John Lindquist
	 */
	public class TrumpFridgeMediator extends Mediator {

		[Inject]
		public var trumpFridgeView : TrumpFridgeView;

		[Inject]
		public var trumpFridge : TrumpFridge;

		override public function onRegister() : void {
			Bind.addListener(onCakeAdded, trumpFridge, "bakedGoods");
		}

		private function onCakeAdded(event : PropertyChangeEvent) : void {
			
			for each (var bakedGood : BakeryDelivery in trumpFridge.bakedGoods.source) {
				var cake:CakeView = new CakeView();
				cake.x = Math.random() * 100;
				cake.y = Math.random() * 200;
				cake.scaleX = cake.scaleY = .5;
				
				trumpFridgeView.addChild(cake);	
			}
		}
	}
}
